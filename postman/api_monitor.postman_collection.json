{
	"info": {
		"name": "api_monitor",
		"_postman_id": "449ea7f3-7b2f-8160-e057-9010cd3430e6",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fd6b49b3-c10e-46c3-92e0-df2fd953db78",
						"type": "text/javascript",
						"exec": [
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Body has token\"] = responseBody.has(\"bearerefef\");",
							"tests[\"Body has User Information\"] = responseBody.has(\"email\");",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ebab840f-a743-4c22-a25c-bf0efd05710f",
						"type": "text/javascript",
						"exec": [
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Body has ID\"] = responseBody.has(\"id\");",
							"tests[\"Body has User Information\"] = responseBody.has(\"email\");",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url}}/profile",
					"host": [
						"{{url}}"
					],
					"path": [
						"profile"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET photos",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd941ffd-f29a-400f-a495-c22cc94201dd",
						"type": "text/javascript",
						"exec": [
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"",
							"tests[\"Assignment List size\"] = data.length > 0;",
							"",
							"",
							"var schema = {",
							"    \"items\": {",
							"        \"type\": \"object\",",
							"        \"properties\" : {",
							"            \"albumId\": { \"type\" : \"number\" },",
							"            \"id\": { \"type\" : \"number\" },",
							"            \"title\": { \"type\" : \"string\" },",
							"            \"url\": { \"type\" : \"string\" },",
							"            \"thumbnailUrl\": { \"type\" : \"string\" },",
							"        }",
							"    }",
							"};",
							"",
							"",
							"tests[\"Data Structure Validation\"] = tv4.validate(data, schema);",
							"",
							"if(tv4.error){",
							"    console.log(\"Validation failed: \", tv4.error);",
							"}",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url}}/photos",
					"host": [
						"{{url}}"
					],
					"path": [
						"photos"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET titles",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "93f69b63-395c-46f1-9dd1-424b2c1b0640",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"tests[\"Response time is acceptable\"] = _.inRange(responseTime, 1, 3000);",
							"var data = JSON.parse(responseBody);",
							"",
							"tests[\"Assignment List size\"] = data.length > 0;",
							"",
							"var schema = {",
							" \"items\": {",
							" \"type\": \"object\",",
							" \"properties\" : {",
							"    \"userId\": { \"type\" : \"number\" },",
							"    \"id\": { \"type\" : \"number\" },",
							"    \"title\": { \"type\" : \"string\" }",
							"  }",
							" }",
							"};",
							"",
							"",
							"tests[\"Data Structure Validation\"] = tv4.validate(data, schema);",
							"",
							"if(tv4.error){",
							"    console.log(\"Validation failed: \", tv4.error);",
							"}",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url}}/titles",
					"host": [
						"{{url}}"
					],
					"path": [
						"titles"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}